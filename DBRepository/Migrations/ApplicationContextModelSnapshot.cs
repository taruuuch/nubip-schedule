// <auto-generated />
using DBRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DBRepository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("Model.Auditory", b =>
                {
                    b.Property<int>("AuditoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuditoryType");

                    b.Property<int>("Computer");

                    b.Property<int>("Housing");

                    b.Property<int>("Number");

                    b.Property<int>("StudentSeatseCount");

                    b.HasKey("AuditoryId");

                    b.ToTable("Auditorys");
                });

            modelBuilder.Entity("Model.Curriculum", b =>
                {
                    b.Property<int>("CurriculumId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DepartamentId");

                    b.Property<int>("LabaratorCount");

                    b.Property<int>("LectionCount");

                    b.Property<int>("Semester");

                    b.Property<int>("SpecialityId");

                    b.Property<int>("SubjectId");

                    b.HasKey("CurriculumId");

                    b.ToTable("Curriculums");
                });

            modelBuilder.Entity("Model.Departament", b =>
                {
                    b.Property<int>("DepartamentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuditoryId");

                    b.Property<string>("Dean");

                    b.Property<int>("FacultyId");

                    b.Property<string>("Title");

                    b.HasKey("DepartamentId");

                    b.ToTable("Departaments");
                });

            modelBuilder.Entity("Model.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Building");

                    b.Property<string>("Dean");

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("FacultyId");

                    b.ToTable("Facultys");
                });

            modelBuilder.Entity("Model.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EducationForm");

                    b.Property<string>("EducationLevel");

                    b.Property<int>("SpecialityId");

                    b.Property<int>("StudentCount");

                    b.Property<int>("TeacherId");

                    b.Property<string>("Title");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Model.Occupation", b =>
                {
                    b.Property<int>("OccupationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuditoryId");

                    b.Property<int>("CurriculumId");

                    b.Property<int>("GroupId");

                    b.Property<int>("SchlTimeId");

                    b.Property<int>("TeacherId");

                    b.HasKey("OccupationId");

                    b.ToTable("Occupations");
                });

            modelBuilder.Entity("Model.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("OccupationId");

                    b.Property<DateTime>("RequestTime");

                    b.Property<int>("SchlTimeId");

                    b.Property<int>("Status");

                    b.HasKey("RequestId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Model.SchlTime", b =>
                {
                    b.Property<int>("SchlTimeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Day");

                    b.Property<TimeSpan>("EndTime");

                    b.Property<int>("Number");

                    b.Property<TimeSpan>("StartTime");

                    b.HasKey("SchlTimeId");

                    b.ToTable("SchlTimes");
                });

            modelBuilder.Entity("Model.Speciality", b =>
                {
                    b.Property<int>("SpecialityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("FacultyId");

                    b.Property<string>("Title");

                    b.HasKey("SpecialityId");

                    b.ToTable("Specialitys");
                });

            modelBuilder.Entity("Model.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Model.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Degree");

                    b.Property<int>("DepartamentId");

                    b.Property<string>("Middlename");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
